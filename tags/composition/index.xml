<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>composition on code with satriyop</title>
    <link>http://satriyop.github.io/tags/composition/</link>
    <description>Recent content in composition on code with satriyop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 May 2020 13:16:17 +0700</lastBuildDate>
    
	<atom:link href="http://satriyop.github.io/tags/composition/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OOP : Inheritance Composition di Go</title>
      <link>http://satriyop.github.io/post/oop-inheritance-composition-go/</link>
      <pubDate>Mon, 04 May 2020 13:16:17 +0700</pubDate>
      
      <guid>http://satriyop.github.io/post/oop-inheritance-composition-go/</guid>
      <description>Bagaimana caranya untuk reuse dari behavior sebuah object yang sudah ada ? secara umum ada dua hal yang bisa dilakukan :
 Inheritance Composition  Meskipun begitu di Go, memilih composition over inheritance, meski begitu mari kita singgung sedikit tentang inheritance supaya kita mendapatkan gambaran utuhnya.
Inheritance adalah strategi reuse dimana sebuah type adalah berdasarkan type yang lainnya (base type), sehingga meng-inherit atau mewarisi fungsionalitas dari base type tersebut. Seringkali digambarkan sebagai hubungan parent-child.</description>
    </item>
    
  </channel>
</rss>